#!/bin/bash
set -euo pipefail
cd "$(dirname "$0")/.."

if [ -z "${TRAVIS_SCALA_VERSION:-}" ]; then
  # Running locally instead of on Travis
  if [ $# -gt 1 ]; then
    echo "Usage: $0 [<scala ver>]"
    echo ""
    echo "Where"
    echo "  <scala ver> = 2 or 3"
    echo
    exit 1
  fi
  case "${1:-}" in
    "")
      "$0" 2
      echo
      echo
      "$0" 3
      exit 0
      ;;
    2|3)
      TRAVIS_SCALA_VERSION="$(egrep "scala: *$1\\." .travis.yml | head -1 | sed 's/.*: *//')"
      echo "Scala version: $TRAVIS_SCALA_VERSION"
      ;;
    *)
      echo "Unrecognised version: $1" >&2
      exit 2
      ;;
  esac
fi

dryrun=
# dryrun=-n

# See how much memory is available
free -h
echo

# Test upstream
rm -rf */target/scala-*/{,test-}classes
cmd=(
  sbt
    -J-Xmx3G
    -J-XX:+UseG1GC
    ++$TRAVIS_SCALA_VERSION
    'set ThisBuild / parallelExecution := false'
    'set Global / concurrentRestrictions += Tags.limit(ScalaJSTags.Link, 1)'
    test                                                # Test development-mode
    'set ThisBuild / scalaJSStage := FullOptStage' test # Test production-mode
    publishLocal                                        # For downstream tests
)
echo "> $(printf "%s\n    " "${cmd[@]}")"
[[ $dryrun == "-n" ]] || "${cmd[@]}"

# Test downstream
SCALA_MAJOR_VER="${TRAVIS_SCALA_VERSION:0:1}"
downstream-tests/run -$SCALA_MAJOR_VER $dryrun
