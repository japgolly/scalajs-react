package japgolly.scalajs.react.hooks

// DO NOT MANUALLY EDIT
// DO NOT MANUALLY EDIT
//
// THIS IS GENERATED BY RUNNING genHooks IN SBT
//
// DO NOT MANUALLY EDIT
// DO NOT MANUALLY EDIT

import japgolly.scalajs.react.hooks.Hooks.UseCallbackArg
import japgolly.scalajs.react.{Callback, Reusable}
import scala.scalajs.js

trait UseCallbackArgInstances {

  implicit def c1[A]: UseCallbackArg[(A) => Callback] =
    UseCallbackArg[(A) => Callback, js.Function1[A, Unit]](
      f => f(_).runNow())(
      z => Reusable.byRef(z).withValue((a) => Callback(z(a))))

  implicit def c2[A, B]: UseCallbackArg[(A, B) => Callback] =
    UseCallbackArg[(A, B) => Callback, js.Function2[A, B, Unit]](
      f => f(_, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b) => Callback(z(a, b))))

  implicit def c3[A, B, C]: UseCallbackArg[(A, B, C) => Callback] =
    UseCallbackArg[(A, B, C) => Callback, js.Function3[A, B, C, Unit]](
      f => f(_, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c) => Callback(z(a, b, c))))

  implicit def c4[A, B, C, D]: UseCallbackArg[(A, B, C, D) => Callback] =
    UseCallbackArg[(A, B, C, D) => Callback, js.Function4[A, B, C, D, Unit]](
      f => f(_, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d) => Callback(z(a, b, c, d))))

  implicit def c5[A, B, C, D, E]: UseCallbackArg[(A, B, C, D, E) => Callback] =
    UseCallbackArg[(A, B, C, D, E) => Callback, js.Function5[A, B, C, D, E, Unit]](
      f => f(_, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e) => Callback(z(a, b, c, d, e))))

  implicit def c6[A, B, C, D, E, F]: UseCallbackArg[(A, B, C, D, E, F) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F) => Callback, js.Function6[A, B, C, D, E, F, Unit]](
      f => f(_, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f) => Callback(z(a, b, c, d, e, f))))

  implicit def c7[A, B, C, D, E, F, G]: UseCallbackArg[(A, B, C, D, E, F, G) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G) => Callback, js.Function7[A, B, C, D, E, F, G, Unit]](
      f => f(_, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g) => Callback(z(a, b, c, d, e, f, g))))

  implicit def c8[A, B, C, D, E, F, G, H]: UseCallbackArg[(A, B, C, D, E, F, G, H) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H) => Callback, js.Function8[A, B, C, D, E, F, G, H, Unit]](
      f => f(_, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h) => Callback(z(a, b, c, d, e, f, g, h))))

  implicit def c9[A, B, C, D, E, F, G, H, I]: UseCallbackArg[(A, B, C, D, E, F, G, H, I) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I) => Callback, js.Function9[A, B, C, D, E, F, G, H, I, Unit]](
      f => f(_, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i) => Callback(z(a, b, c, d, e, f, g, h, i))))

  implicit def c10[A, B, C, D, E, F, G, H, I, J]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J) => Callback, js.Function10[A, B, C, D, E, F, G, H, I, J, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j) => Callback(z(a, b, c, d, e, f, g, h, i, j))))

  implicit def c11[A, B, C, D, E, F, G, H, I, J, K]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K) => Callback, js.Function11[A, B, C, D, E, F, G, H, I, J, K, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k) => Callback(z(a, b, c, d, e, f, g, h, i, j, k))))

  implicit def c12[A, B, C, D, E, F, G, H, I, J, K, L]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L) => Callback, js.Function12[A, B, C, D, E, F, G, H, I, J, K, L, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l))))

  implicit def c13[A, B, C, D, E, F, G, H, I, J, K, L, M]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M) => Callback, js.Function13[A, B, C, D, E, F, G, H, I, J, K, L, M, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m))))

  implicit def c14[A, B, C, D, E, F, G, H, I, J, K, L, M, N]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N) => Callback, js.Function14[A, B, C, D, E, F, G, H, I, J, K, L, M, N, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n))))

  implicit def c15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O) => Callback, js.Function15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o))))

  implicit def c16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P) => Callback, js.Function16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p))))

  implicit def c17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q) => Callback, js.Function17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q))))

  implicit def c18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R) => Callback, js.Function18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r))))

  implicit def c19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S) => Callback, js.Function19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s))))

  implicit def c20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T) => Callback, js.Function20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t))))

  implicit def c21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U) => Callback, js.Function21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u))))

  implicit def c22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]: UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V) => Callback] =
    UseCallbackArg[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V) => Callback, js.Function22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, Unit]](
      f => f(_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).runNow())(
      z => Reusable.byRef(z).withValue((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v) => Callback(z(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v))))

}
